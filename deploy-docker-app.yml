---
- name: Deploy Flask Docker Application
  hosts: all
  become: yes
  vars:
    app_dir: /home/ec2-user/flask-docker-app
    container_name: flask-app
    image_name: my-flask-app
    # Allow image tag to be passed from Jenkins
    docker_image_tag: "latest"
  
  tasks:
    - name: Install Docker
      dnf:
        name: docker
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes

    - name: Create application directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: ec2-user
        group: ec2-user

    - name: Copy application files
      copy:
        src: "{{ item.src }}"
        dest: "{{ app_dir }}/{{ item.dest }}"
        owner: ec2-user
        group: ec2-user
      loop:
        - { src: "app.py", dest: "app.py" }
        - { src: "requirements.txt", dest: "requirements.txt" }
        - { src: "Dockerfile", dest: "Dockerfile" }

    - name: Build Docker image
      community.docker.docker_image:
        name: "{{ image_name }}:{{ docker_image_tag }}"
        source: build
        build:
          path: "{{ app_dir }}"
        force_source: yes

    - name: Stop and remove existing container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent

    - name: Run Docker container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ image_name }}:{{ docker_image_tag }}"
        state: started
        restart_policy: always
        ports:
          - "5000:5000"
        detach: yes

    - name: Verify container is running
      community.docker.docker_container_info:
        name: "{{ container_name }}"
      register: container_info

    - name: Check application health
      uri:
        url: "http://{{ ansible_host }}:5000"
        method: GET
        status_code: 200
        timeout: 30
      register: health_check
      until: health_check.status == 200
      retries: 5
      delay: 5
